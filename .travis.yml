language: minimal
sudo: required
services:
cache:
  directories:
    - $TRAVIS_BUILD_DIR/depends/built/$HOST/
    - $HOME/Library/Caches/Homebrew
stages:
  - deps
  - build
env:
  global:
    - MAKEJOBS=-j4
    - RUN_UNIT_TESTS=true
    - RUN_FUNCTIONAL_TESTS=false # Not Yet Implemented
    - RUN_BENCH=false # Set to true for any one job that has debug enabled, to quickly check bench is not crashing or hitting assertions
    - DOCKER_NAME_TAG=ubuntu:18.04
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=100M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - CCACHE_DIR=$HOME/.ccache
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - WINEDEBUG=fixme-all
    - DOCKER_PACKAGES="zip build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev git make gcc g++ autoconf libboost-all-dev software-properties-common libzmq3-dev libdb4.8-dev libdb4.8++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev autoconf libcurl4-openssl-dev libgmp-dev libleveldb-dev libmicrohttpd-dev libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler"
before_script:
  - export -f travis_fold
  - source .travis/$SCRIPT-before-script.sh
install:
  - set -o errexit; source .travis/$SCRIPT-install.sh
script:
  - set -o errexit; source .travis/$SCRIPT-script.sh
after_script:
  - echo $TRAVIS_COMMIT_RANGE
  - echo $TRAVIS_COMMIT_LOG
deploy:
  provider: releases
  api_key: $OAUTH
  file: "$RELEASE_FILE"
  skip_cleanup: true
  draft: true
  on:
    tags: true
jobs:
  include:
    - stage: deps
      dist: bionic
      env: >-
        SCRIPT=linux
        HOST=i686-w64-mingw32
        RELEASE_FILE=ctsc-$TRAVIS_TAG-Win32.zip
        DPKG_ADD_ARCH="i386"
        PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32"
        GOAL="install"
        BITCOIN_CONFIG="--enable-gui --enable-reduce-exports"
      script: true
    - stage: deps
      dist: bionic
      env: >-
        SCRIPT=linux
        HOST=x86_64-w64-mingw32
        RELEASE_FILE=ctsc-$TRAVIS_TAG-Win64.zip
        DPKG_ADD_ARCH="i386"
        PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32"
        GOAL="install"
        BITCOIN_CONFIG="--enable-gui --enable-reduce-exports"
      script: true
    - stage: deps
      dist: bionic
      env: >-
        SCRIPT=linux
        HOST=x86_64-86-linux-gnu
        RELEASE_FILE=ctsc-$TRAVIS_TAG-ubuntu18.04-x86-64.tar.gz
        PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev"
        DEP_OPTS="ALLOW_HOST_PACKAGES=1"
        GOAL="install"
        BITCOIN_CONFIG="--enable-gui --disable-tests --disable-gui-tests --disable-bench --enable-experimental-asm CFLAGS=-fPIC CXXFLAGS=-fPIC --enable-shared --with-incompatible-bdb"
      script: true
    - stage: build
      dist: bionic
      env: >-
        SCRIPT=linux
        HOST=x86_64-86-linux-gnu
        RELEASE_FILE=ctsc-$TRAVIS_TAG-ubuntu18.04-x86-64.tar.gz
        PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev"
        DEP_OPTS="ALLOW_HOST_PACKAGES=1"
        GOAL="install"
        BITCOIN_CONFIG="--enable-gui --disable-tests --disable-gui-tests --disable-bench --enable-experimental-asm CFLAGS=-fPIC CXXFLAGS=-fPIC --enable-shared --with-incompatible-bdb"
    - stage: build
      dist: xenial
      env: >-
        SCRIPT=linux
        HOST=x86_64-86-linux-gnu
        RELEASE_FILE=ctsc-$TRAVIS_TAG-ubuntu16.04-x86-64.tar.gz
        PACKAGES="python3-zmq qtbase5-dev qttools5-dev-tools protobuf-compiler libdbus-1-dev libharfbuzz-dev libprotobuf-dev"
        NO_DEPENDS="true"
        GOAL="install"
        BITCOIN_CONFIG="--disable-tests --disable-gui-tests --disable-bench --enable-experimental-asm CFLAGS=-fPIC CXXFLAGS=-fPIC --enable-shared --with-incompatible-bdb"
    - stage: build
      dist: bionic
      env: >-
        SCRIPT=linux
        HOST=i686-w64-mingw32
        RELEASE_FILE=ctsc-$TRAVIS_TAG-Win32.zip
        DPKG_ADD_ARCH="i386"
        PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32"
        GOAL="install"
        BITCOIN_CONFIG="--enable-gui --enable-reduce-exports"
    - stage: build
      dist: bionic
      env: >-
        SCRIPT=linux
        HOST=x86_64-w64-mingw32
        RELEASE_FILE=ctsc-$TRAVIS_TAG-Win64.zip
        DPKG_ADD_ARCH="i386"
        PACKAGES="python3 nsis g++-mingw-w64-i686 wine-binfmt wine32"
        GOAL="install"
        BITCOIN_CONFIG="--enable-gui --enable-reduce-exports"
    - stage: build
      os: osx
      osx_image: xcode9.4
      env: >-
        RELEASE_FILE=high-CTSC.dmg
        SCRIPT=mac
    # https://travis-ci.community/t/osascript-stopped-working-on-macos-mojave/3657
    # - stage: osx-mojave
    #   os: osx
    #   osx_image: xcode10.2
    #   env: >-
    #     RELEASE_FILE=mojave-CTSC.dmg
    #     SCRIPT=mac
    #   install:
    #     - echo "Skip normal brew install and use addons"
    #     - csrutil disable
    #     - sudo sqlite3 "/Library/Application Support/com.apple.TCC/TCC.db" 'UPDATE access SET allowed = "1";'
    #   addons:
    #     homebrew:
    #       packages:
    #         - autoconf
    #         - fontconfig
    #         - gdbm
    #         - openssl@1.0
    #         - boost@1.57
    #         - glib
    #         - harfbuzz
    #         - jpeg
    #         - libffi
    #         - libtiff
    #         - pixman
    #         - python@2
    #         - sqlite
    #         - automake
    #         - freetype
    #         - gdk-pixbuf
    #         - gmp
    #         - icu4c
    #         - libcroco
    #         - libpng
    #         - libtool
    #         - pango
    #         - pkg-config
    #         - qt
    #         - watch
    #         - berkeley-db@4
    #         - cairo
    #         - fribidi
    #         - gettext
    #         - graphite2
    #         - iperf
    #         - libevent
    #         - librsvg
    #         - miniupnpc
    #         - pcre
    #         - protobuf
    #         - readline
    #     update: true
